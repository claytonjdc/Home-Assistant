- alias: Hyperion No Effect
  trigger:
  - platform: state
    entity_id: input_select.hyperion_effect
    to: "None"
  action:
    service: shell_command.hyperion_effect_none

- alias: Hyperion Set Effect
  trigger:
  - platform: state
    entity_id: input_select.hyperion_effect
    from: "None"
  action:
    service: shell_command.hyperion_set_effect

- alias: Hyperion Auto On
  trigger:
  - platform: state
    entity_id: sensor.harmony_hub
    from: "PowerOff"
  action:
    service: switch.turn_on
    entity_id: switch.hyperion

# - alias: Hyperion Auto Off
#   trigger:
#   - platform: state
#     entity_id: sensor.harmony_hub
#     to: "PowerOff"
#   action:
#     service: switch.turn_off
#     entity_id: switch.hyperion
#
# script:
#     hyperion_auto:
#       sequence:
#          {% if is_state('sensor.harmony_hub', 'Watch TV') or is_state('sensor.harmony_hub', 'PowerOff') %}
#             action:
#               service: switch.turn_off
#               entity_id: switch.hyperion
#           {% else %}
#             action:
#               service: switch.turn_on
#               entity_id: switch.hyperion
#           {% endif %}

- alias: Hyperion Auto
    trigger:
      platform: template
      value_template: >
        {{ is_state('sensor.harmony_hub', 'Watch TV')
        or is_state('sensor.harmony_hub', 'PowerOff')
        }}
    action:
      service: switch.turn_off
      entity_id: switch.hyperion
